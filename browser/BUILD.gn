# Copyright 2024 The Radium Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

import("//components/enterprise/buildflags/buildflags.gni")
import("//crypto/features.gni")
import("//ui/base/ui_features.gni")

static_library("browser") {
  sources = [
    "browser_prefs.cc",
    "browser_prefs.h",
    "browser_process.cc",
    "browser_process.h",
    "browser_process_platform_part.h",
    "browser_process_platform_part_base.cc",
    "browser_process_platform_part_base.h",
    "global_features.cc",
    "global_features.h",
    "net/cert_verifier_service_time_updater.cc",
    "net/cert_verifier_service_time_updater.h",
    "net/convert_explicitly_allowed_network_ports_pref.cc",
    "net/convert_explicitly_allowed_network_ports_pref.h",
    "net/cookie_encryption_provider_impl.cc",
    "net/cookie_encryption_provider_impl.h",
    "net/default_dns_over_https_config_source.cc",
    "net/default_dns_over_https_config_source.h",
    "net/dns_over_https_config_source.h",
    "net/profile_network_context_service.cc",
    "net/profile_network_context_service.h",
    "net/profile_network_context_service_factory.cc",
    "net/profile_network_context_service_factory.h",
    "net/proxy_config_monitor.cc",
    "net/proxy_config_monitor.h",
    "net/proxy_service_factory.cc",
    "net/proxy_service_factory.h",
    "net/radium_mojo_proxy_resolver_factory.cc",
    "net/radium_mojo_proxy_resolver_factory.h",
    "net/secure_dns_config.cc",
    "net/secure_dns_config.h",
    "net/secure_dns_util.cc",
    "net/secure_dns_util.h",
    "net/stub_resolver_config_reader.cc",
    "net/stub_resolver_config_reader.h",
    "net/system_network_context_manager.cc",
    "net/system_network_context_manager.h",
    "platform_util.h",
    "radium_browser_interface_binders.cc",
    "radium_browser_interface_binders.h",
    "radium_browser_main_extra_parts.h",
    "radium_browser_main_parts.cc",
    "radium_browser_main_parts.h",
    "radium_content_browser_client.cc",
    "radium_content_browser_client.h",
    "radium_resource_bundle_helper.cc",
    "radium_resource_bundle_helper.h",
    "ssl/ssl_config_service_manager.cc",
    "ssl/ssl_config_service_manager.h",
  ]

  deps = [
    "//base/version_info",
    "//components/certificate_transparency",
    "//components/color",
    "//components/embedder_support",
    "//components/embedder_support:browser_util",
    "//components/embedder_support/origin_trials",
    "//components/net_log",
    "//components/os_crypt/async/browser",
    "//components/proxy_config",
    "//content/public/browser",
    "//content/public/common",
    "//radium/app/theme:theme_resources",
    "//radium/browser/badging",
    "//radium/browser/content_settings",
    "//radium/browser/devtools",
    "//radium/browser/lifetime",
    "//radium/browser/metrics",
    "//radium/browser/prefs",
    "//radium/browser/profiles",
    "//radium/browser/profiles:profiles_extra_parts_impl",
    "//radium/browser/ui",
    "//services/cert_verifier:lib",
    "//services/network/public/cpp",
    "//services/network/public/mojom",
    "//services/proxy_resolver:lib",
    "//services/strings",
  ]

  if (is_android) {
    sources += [
      "browser_process_platform_part_android.cc",
      "browser_process_platform_part_android.h",
      "radium_browser_main_parts_android.cc",
      "radium_browser_main_parts_android.h",
    ]

    deps += [
      "//components/android_autofill/browser:android",
      "//components/android_autofill/browser:features",
      "//components/crash/content/browser",
      "//components/embedder_support/android:view",
      "//radium/browser/android",
      "//radium/browser/tab",
    ]
  } else {
    deps += [
      "//components/keep_alive_registry",
      "//radium/browser/themes",
      "//radium/browser/ui",
    ]

    if (!is_win) {
      sources += [
        "radium_browser_main_parts_posix.cc",
        "radium_browser_main_parts_posix.h",
      ]
    } else {
      sources += [
        "net/radium_mojo_proxy_resolver_win.cc",
        "net/radium_mojo_proxy_resolver_win.h",
        "radium_browser_main_parts_win.cc",
        "radium_browser_main_parts_win.h",
      ]

      deps += [
        "//components/os_crypt/async/browser:dpapi_key_provider",
        "//radium/browser/win",
      ]
    }
  }

  if (use_aura) {
    # Cross - platform Aura files.
    sources += [ "platform_util_aura.cc" ]

    deps += [ "//ui/aura" ]

    if (is_linux) {
      deps += [
        "//ui/linux:linux_ui",
        "//ui/linux:linux_ui_factory",
      ]
    }
  }

  if (is_posix) {
    sources += [
      "shutdown_signal_handlers_posix.cc",
      "shutdown_signal_handlers_posix.h",
    ]
  }

  if (is_linux) {
    sources += [
      "radium_browser_main_extra_parts_linux.cc",
      "radium_browser_main_extra_parts_linux.h",
      "radium_browser_main_parts_linux.cc",
      "radium_browser_main_parts_linux.h",
    ]
  }

  if (is_mac) {
    sources += [
      "app_controller_mac.h",
      "app_controller_mac.mm",
      "browser_process_platform_part_mac.h",
      "browser_process_platform_part_mac.mm",
      "mac/exception_processor.h",
      "mac/exception_processor.mm",
      "platform_util_mac.mm",
      "radium_browser_application_mac.h",
      "radium_browser_application_mac.mm",
      "radium_browser_main_extra_parts_mac.h",
      "radium_browser_main_extra_parts_mac.mm",
      "radium_browser_main_parts_mac.h",
      "radium_browser_main_parts_mac.mm",
    ]

    deps += [ "//ui/display" ]
  }

  if (use_ozone) {
    sources += [
      "radium_browser_main_extra_parts_ozone.cc",
      "radium_browser_main_extra_parts_ozone.h",
    ]

    deps += [
      "//ui/events/ozone",
      "//ui/ozone",
    ]
  }

  if (is_linux && use_dbus) {
    deps += [ "//components/os_crypt/async/browser:secret_portal_key_provider" ]
  }

  if (use_nss_certs) {
    sources += [
      "net/nss_service.cc",
      "net/nss_service.h",
      "net/nss_service_factory.cc",
      "net/nss_service_factory.h",
    ]
    if (is_linux) {
      sources += [ "net/nss_service_linux.cc" ]
    }
    configs += [ "//build/config/linux/nss" ]
  }

  if (enterprise_client_certificates) {
    deps += [ "//components/enterprise/client_certificates/core" ]
  }
}
