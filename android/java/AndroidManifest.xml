<?xml version="1.0" encoding="utf-8"?>
<!--
# Copyright 2024 The Chromium Radium Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.
-->

<!--
Note: This is a jinja2 template, processed at build time into the final manifest.

Blocks denoted with { % block some_name % }foo{ % endblock % } can be overridden
by a child template that "extends" this file.
-->

<manifest xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:tools="http://schemas.android.com/tools"
    package="{{ manifest_package }}"
    {% set definitions_in_split = definitions_in_split|default(0) == 'true' %}
    {% if definitions_in_split %}
    android:isolatedSplits="true"
    {% endif %}
    tools:ignore="MissingVersion">
    <!-- android:versionCode and android:versionName is set through gyp. See build/common.gypi -->

    <uses-feature android:glEsVersion="0x00020000" />

    <uses-permission android:name="android.permission.ACCESS_COARSE_LOCATION"/>
    <uses-permission android:name="android.permission.ACCESS_NETWORK_STATE"/>
    <uses-permission android:name="android.permission.CAMERA"/>
    <uses-permission android:name="android.permission.INTERNET"/>
    <uses-permission android:name="android.permission.MODIFY_AUDIO_SETTINGS"/>
    <uses-permission android:name="android.permission.RECORD_AUDIO"/>
    <uses-permission android:name="android.permission.VIBRATE"/>
    <uses-permission android:name="android.permission.WAKE_LOCK"/>
    <uses-permission android:name="android.permission.WRITE_EXTERNAL_STORAGE"/>

    <application android:name="org.radium.browser.RadiumApplication"
            android:icon="@drawable/ic_launcher"
            android:roundIcon="@drawable/ic_launcher_round"
            android:label="{% block application_label %}@string/app_name{% endblock %}"
            android:memtagMode="async"
            android:largeHeap="false"
            android:zygotePreloadName="{{ zygote_preload_class }}">

        <activity android:name="org.radium.browser.RadiumShellActivity"
                  android:theme="@style/Theme.Chromium.Activity.Fullscreen"
                  android:exported="true">
            <intent-filter>
                <action android:name="android.intent.action.MAIN" />
                <category android:name="android.intent.category.DEFAULT" />
                <category android:name="android.intent.category.LAUNCHER" />
                <category android:name="android.intent.category.BROWSABLE" />
                <category android:name="android.intent.category.APP_BROWSER" />
                {% if channel in ['dev', 'canary', 'default'] %}
                <category android:name="android.intent.category.MULTIWINDOW_LAUNCHER" />
                {% endif %}
            </intent-filter>
        </activity>

        <!-- The following service entries exist in order to allow us to
            start more than one sandboxed process. -->

        <!-- NOTE: If you change the value of "android:process" for the below services,
            you also need to update kHelperProcessExecutableName in chrome_constants.cc. -->
        {% set num_sandboxed_services = 40 %}
        <meta-data android:name="org.chromium.content.browser.NUM_SANDBOXED_SERVICES"
            android:value="{{ num_sandboxed_services }}"/>

        {% for i in range(num_sandboxed_services) %}
        <service android:name="org.chromium.content.app.SandboxedProcessService{{ i }}"
            android:process=":sandboxed_process{{ i }}"
            android:permission="{{ manifest_package }}.permission.CHILD_SERVICE"
            android:isolatedProcess="true"
            android:exported="{{sandboxed_service_exported|default(false)}}"
            {% if (i == 0) %}
            android:useAppZygote="true"
            {% endif %}
            {% if (sandboxed_service_exported|default(false)) == 'true' %}
            android:externalService="true"
            tools:ignore="ExportedService"
            android:visibleToInstantApps="true"
            {% endif %} />
        {% endfor %}

        {% if javaless_renderers is defined %}
        <!-- Restricting to just 2 native-only services, one for zygote and one for non-zygote. -->
        {% for i in range(2) %}
        <!-- For now, the name of a native-only service must be prefixed with "NativeService". This is
            only for the prototype, and once it actually lands in the Android tree, there will be a
            better mechanism than this. -->
        <service android:name="org.chromium.content.app.NativeServiceSandboxedProcessService{{ i }}"
            android:process=":sandboxed_process{{ i }}"
            android:permission="{{ manifest_package }}.permission.CHILD_SERVICE"
            android:isolatedProcess="true"
            android:exported="{{sandboxed_service_exported|default(false)}}"
            {% if (sandboxed_service_exported|default(false)) == 'true' %}
            android:externalService="true"
            tools:ignore="ExportedService"
            android:visibleToInstantApps="true"
            {% endif %} >
            <meta-data android:name="android.app.lib_name" android:value="{{ library_name }}"/>
            <meta-data android:name="android.app.func_name" android:value="NativeChildProcessService_onCreate"/>
        </service>
        {% endfor %}
        {% endif %}

        {% set num_privileged_services = 10 %}
        <meta-data android:name="org.chromium.content.browser.NUM_PRIVILEGED_SERVICES"
            android:value="{{ num_privileged_services }}"/>

        {% for i in range(num_privileged_services) %}
        {% set privileged_process_name = ':privileged_process%d' % i %}
        <service android:name="org.chromium.content.app.PrivilegedProcessService{{ i }}"
            android:process="{{ privileged_process_name }}"
            android:permission="{{ manifest_package }}.permission.CHILD_SERVICE"
            android:isolatedProcess="false"
            android:exported="false" />

        {% endfor %}

        <meta-data android:name="org.chromium.content.browser.SMART_CLIP_PROVIDER"
                   android:value="org.chromium.content.browser.SmartClipProvider" />

        <meta-data android:name="android.allow_multiple_resumed_activities" android:value="true" />

        <!-- Samsung MultiWindow Support -->
        <meta-data android:name="com.samsung.android.sdk.multiwindow.enable"
            android:value="true" />

        <meta-data android:name="com.samsung.android.sdk.multiwindow.penwindow.enable"
            android:value="true"/>

        {% if channel in ['dev', 'canary', 'default'] %}
        <meta-data android:name="com.sec.android.support.multiwindow" android:value="true" />
        {% endif %}

    </application>

</manifest>
