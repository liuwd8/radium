# Copyright 2024 The Radium Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

import("//radium/common/features.gni")
import("//radium/locales.gni")
import("//tools/grit/grit_args.gni")
import("//tools/grit/grit_rule.gni")

group("resources") {
  deps = [ ":radium_strings" ]
}

xtb_locales = support_locales - [ "en-US" ]

grit_strings("radium_strings") {
  source = "radium_strings.grd"
  defines = radium_grit_defines
  output_dir = "$root_gen_dir/radium"
  outputs = [ "grit/radium_strings.h" ]
  locales = support_locales
}

action("generate_xtb_file") {
  script = "//radium/tools/generate_translations.py"

  sources = [ "radium_strings.grd" ]

  outputs = [ "${target_gen_dir}/generate_translations.stamp" ]

  args = [
           "-i",
           rebase_path("radium_strings.grd"),
           "--xtb",
           rebase_path("//chrome/app/resources"),
           "--template_file",
           rebase_path("translations"),
           "-o",
           rebase_path("translations"),
           "-E",
           "target_gen_dir=" + rebase_path("${target_gen_dir}"),
         ] + grit_args + xtb_locales
}

# This target is for dependency tracking for the command ID header.
source_set("command_ids") {
  sources = [ "radium_command_ids.h" ]
  public_deps = [ "//build:branding_buildflags" ]
  deps = [
    "//build:chromeos_buildflags",
    "//services/screen_ai/buildflags:buildflags",
    "//ui/base:constants",
  ]
}

# On Windows, links radium_dll.rc. On other platforms, does nothing so you can
# unconditionally depend on it.
source_set("radium_dll_resources") {
  # This source is added unconditionally for include checking on non-Windows
  # platforms.
  sources = [ "radium_dll_resource.h" ]

  deps = [ ":command_ids" ]

  if (is_win) {
    sources += [ "radium_dll.rc" ]

    deps += [
      "//build:branding_buildflags",
      "//printing/buildflags",
    ]
  }
}

if (is_win) {
  source_set("exit_code_watcher") {
    sources = [
      "exit_code_watcher_win.cc",
      "exit_code_watcher_win.h",
    ]
    public_deps = [ "//base:base" ]
  }
}
